backgroundColor = DT::styleInterval(c(-0.01, 0.01), c('grey', 'white', 'grey'))    )
View(anomalies_set)
View(SaldaeDataExplorer::data_quality_DT)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
library(tidyverse)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
#' Anomaly Detection Pool (View)
#' @author  Farid Azouaou
#' @param anomalies_set a list of dataframes containing anomaly detection results
#' @return a DT table
#' @export
anomaly_to_DT_insight <- function(anomalies_set = NULL){
my_date <- anomalies_set[[1]][,"date"]
target_variables <- names(anomalies_set)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
anomalies_set<- my_date%>%dplyr::bind_cols(anomalies_set)
colnames(anomalies_set)<- gsub("_observed","",colnames(anomalies_set))
value_columns  <- anomalies_set%>%dplyr::select(dplyr::contains("_deviation"))%>%colnames()
columns2hide   <-grep("_deviation|anomaly",colnames(anomalies_set))
anomaly_DT <- anomalies_set%>%DT::datatable(extensions = 'Scroller',options=list(deferRender = TRUE, scrollY = 200, scroller = TRUE,columnDefs = list(list(visible=FALSE, targets=columns2hide))))%>%
DT::formatStyle(
columns =target_variables ,
valueColumns =value_columns,
color = DT::styleInterval(c(-0.01, 0.01), c('white', 'black', 'red')),
backgroundColor = DT::styleInterval(c(-0.01, 0.01), c('orange', 'white', 'brown'))    )
return(anomaly_DT)
}
#
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
aa
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
library(SaldaeDataExplorer)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
aa
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library("dplyr")
library("ggplot2")
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
anomalies_charts <- names(anomalies_set)%>%purrr::map(~SA_anomaly_charter(anomaly_tisefka = anomalies_set[[.x]],target_variable = .x))%>%
stats::setNames(names(anomalies_set))
anomalies_DT <- anomaly_to_DT_insight(anomalies_set = anomalies_set)
anomalies_charts$psavert
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
as.yearmon
lubridate::as.yearmon
zoo::as.yearmon
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(readr)
tisefka <- read_csv("~/Saldae_Analytics/Tisefka/HQ_data.csv")
View(HQ_data)
tisefka$DATUM
tisefka$date <- tisefka$DATUM
tisefka$DATUM <- NULL
colnames(tisefka$DATUM)
colnames(tisefka)
target_ts <- c("BETR. NEG"      ,    "BETR. POS")
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/gemmu_rate_module.R')
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
target_ts <- target_ts[gemmu]
target_ts
gemmu
View(tisefka)
target_ts <- c("QUAL. NEG"      ,    "QUAL. POS")
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
gemmu
tisefka[,target_ts]<- asb(tisefka[,target_ts])
tisefka[,target_ts]<- abs(tisefka[,target_ts])
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
target_ts <- target_ts[gemmu]
target_ts
target_ts
gemmu
unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
tisefka[, target_ts]
target_ts <- c("QUAL. NEG"      ,    "QUAL. POS")
tisefka[,target_ts]<- abs(tisefka[,target_ts])
# tisefka <- tisefka_report$tisefka
#
# base_unit <- tisefka_report$time_unit
gemmu <- unlist(purrr::map(tisefka[, target_ts],  ~tezmer_i_gemmu(.x)))
gemmu
target_ts
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
akka_ukuden
names(akka_ukuden) <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
base_unit <- "1/4 hour"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = base_unit)))
base_unit
base_unit
akka_ukuden
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hours","1/4 hours" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
ukud_asurif[base_unit]
ukud_asurif
base_unit
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minute","15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
ukud_asurif <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
akka_ukuden <- c("Seconds", "Minutes", "Hourly","1/2 Hourly","1/4 Hourly", "Daily", "Weekly", "Monthly", "Quarterly", "Yearly")
names(akka_ukuden) <- c("seconds", "minutes", "hours","+30 minute","+15 minute" ,"days", "weeks", "months", "quarters", "years")
ukud_asurif <- c("seconds", "minutes", "hours","30 minutes","15 minutes" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif[base_unit]
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit]))
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
min(tisefka$date)
tisefka$date <- as.POSIXct(tisefka$date)
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
min(tisefka$date)
max(tisefka$date)
min(tisefka$date)
ukud_asurif <- c("seconds", "minutes", "hours","30 min","15 min" ,"days", "weeks", "months", "quarters", "years")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
seq.Date(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "7 day", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
dim(tisefka)
base_unit<-"weeks"
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "7 day", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
View(full_dates)
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "week", "month", "3 month", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
full_dates
ukud_asurif <- c("sec", "min", "hour","30 min","15 min" ,"day", "week", "month", "quarter", "year")
ukud_isem   <- c("seconds", "minutes", "hours","1/2 hour","1/4 hour" ,"days", "weeks", "months", "quarters", "years")
names(ukud_asurif) <- ukud_isem
base_unit <- "seconds"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dim(full_dates)
base_unit <- "minutes"
full_dates <- dplyr::tbl_df(data.frame(date = seq(from = min(tisefka$date), to = max(tisefka$date), by = ukud_asurif[base_unit])))
dimp(full_dates)
dim(full_dates)
library(SaldaeDataExplorer)
library(ggplot2)
gemu_tisefka <- economics
gemu_tisefka
target_variable <- "pop"
gemu_tisefka%>%dplyr::select(date,!!target_variable)
library(dplyr)
gemu_tisefka%>%dplyr::select(date,!!target_variable)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka
gemu_tisefka%>%dplyr::select(date,!!target_variable)
gemmu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines", color = ~variable) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p <- p %>% plotly::config(displaylogo = F)
return(p)
p
?plotly::plot_ly
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "scatter", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = "bar", mode = "lines") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
o
p
plot_type<-"bar"
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,colors = "orange") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = "orange") %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
plotly::I("orange")
base::I("orange")
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("lightblue4")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color = base::I("lightgoldenrod4")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemu_tisefka <- tisefka
gemu_tisefka <- economics
target_variable
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%mutate(increase = sign(!!target_variable))
gemu_tisefka <- economics
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(!!target_variable))
gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
gemu_tisefka$pop <- gemu_tisefka$pop * rnorm(nrow(gemu_tisefka),0,2)
gemu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
gemu_tisefka
gemu_tisefka <- gemu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka
gemu_tisefka
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
gemmu_tisefka$pop <- gemmu_tisefka$pop * rnorm(nrow(gemmu_tisefka),0,2)
gemmu_tisefka
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))
#----------------------------
# gemmu_tisefka <- reshape2::melt(gemu_tisefka, id.vars = "date")
plot_mode <- "lines"
if(plot_type=="bar")plot_mode<-NULL
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,color =~increase) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~increase,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =increase,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt(gemu_tisefka, id.vars = "date")
gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt(gemmu_tisefka, id.vars = "date")
#----------------------------
gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(increase = sign(dplyr::pull(gemmu_tisefka,!!target_variable)))%>%
reshape2::melt( id.vars = "date")
dplyr::pull(gemmu_tisefka,!!target_variable)
status_f <- function(x){
if(sign(x)>0)return("increase")
if(sign(x)<0)return("decrease")
return("stable")
}
sapply(dplyr::pull(gemmu_tisefka,!!target_variable),status_f)
status <- sapply(dplyr::pull(gemmu_tisefka,!!target_variable),status_f)
gemmu_tisefka <- gemmu_tisefka%>%dplyr::select(date,!!target_variable)%>%
mutate(status = status)
gemmu_tisefka
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("blue","orange")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 100)
)
p
status
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("green","grey","blue")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("orange","grey","green")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
p <- gemmu_tisefka %>%
plotly::plot_ly(x = ~date, y = ~base::get(target_variable), type = plot_type, mode = plot_mode,
color =~status,colors = c("orange","grey","seagreen")) %>%
plotly::layout(
xaxis = base::list(title = paste("Time"), tickangle = -45),
yaxis = base::list(title = "Growth Rate"),
margin = base::list(b = 100),
barmode = "stack", legend = list(orientation = "h", x = 0.35, y = 0)
)
p
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
