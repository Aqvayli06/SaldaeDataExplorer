ll.df <- data.frame(
x = smoothing$x, fit = smoothing$fit,
lb = smoothing$fit - (1.96 * smoothing$s),
ub = smoothing$fit + (1.96 * smoothing$s)
)
p <- plotly::add_lines(p, x = ~date, y = smoothing.pred$fit, name = "Smoothing", line = base::list(color = "#E7B800", width = 2))
p <- plotly::add_ribbons(p,
x = ~date, ymin = ll.df$lb, ymax = ll.df$ub, name = "95% CI", line = base::list(opacity = 0.4, width = 0, color = "#E7B800"),
fillcolor = "rgba(7, 164, 181, 0.2)"
)
p <- plotly::layout(p, y_axis = y_ax)
y_ax
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
b <- purrr::map(.x = names(a$tisefka),print("farid"))
names(a$tisefka)
b <- purrr::map(.x = names(a$tisefka),sekned_tisefka(tisefka = a$tisefka[[.x]],target_variable = .x,time_unit = a$time_unit,ts_actions = c("Anomaly")))
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
b <- purrr::map(.x = names(a$tisefka),sekned_tisefka(tisefka = a$tisefka[[.x]],target_variable = .x,time_unit = a$time_unit,ts_actions = c("Anomaly")))
b <- purrr::map(.x = names(a$tisefka),~sekned_tisefka(tisefka = a$tisefka[[.x]],target_variable = .x,time_unit = a$time_unit,ts_actions = c("Anomaly")))
b
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
b <- purrr::map(.x = names(a$tisefka),~sekned_tisefka(tisefka = a$tisefka[[.x]],target_variable = .x,time_unit = a$time_unit,ts_actions = c("Anomaly"),aggregation = a$aggregation_metric))
a
b
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
devtools::load_all(".")
library(SaldaeDataExplorer)
devtools::load_all(".")
devtools::load_all(".")
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(dtwclust)
library(dtclust)
install.packages("dtwclust")
library(dtwclust)
dtwclust
library(dtwclust)
interactive_clustering(CharTrajMV)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_exploratory_module.R')
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/time_aggregator_module.R')
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/time_aggregator_module.R')
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/gemmu_rate_module.R')
library(SaldaeDataExplorer)
SA_date_format
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(readr)
quarter_hourly_data <- read_csv("~/Saldae_Analytics/Tisefka/quarter_hourly_data.csv")
View(quarter_hourly_data)
tisefka <- quarter_hourly_data
tisefka <- tisefka%>%janitor::remove_empty()
library(dplyr)
tisefka <- tisefka%>%janitor::remove_empty()
?janitor::remove_empty
tisefka <- tisefka%>%janitor::remove_empty(which = c("cols"))
tisefka
tisefka <- tisefka%>%janitor::remove_empty(which = c("cols"))
%>%janitor::remove_constant()
tisefka <- tisefka%>%janitor::remove_empty(which = c("cols"))%>%
janitor::remove_constant()
tisefka
library(SaldaeDataExplorer)
library(readr)
supermarket_sales_Sheet1 <- read_csv("~/Saldae_Analytics/Tisefka/supermarket_sales - Sheet1.csv")
View(supermarket_sales_Sheet1)
supermarket_sales_Sheet1$Date
mydate <- supermarket_sales_Sheet1$Date
readr::parse_datetime(mydate)
mydate <- mydate[1]
readr::parse_datetime(mydate)
readr::parse_datetime
?readr::parse_datetime
if(!is.na(readr::parse_datetime(mydate)))return(TRUE)
!is.na(readr::parse_datetime(mydate))
!is.na(readr::parse_datetime(mydate))==TRUE
mydate
SA_date_format <- "%d/%m%Y"
SA_date_format
base::as.POSIXct(mydate, format = SA_date_format)
SA_date_format
SA_date_format <- "%d/%m/%Y"
base::as.POSIXct(mydate, format = SA_date_format)
SA_date_format <- "d/m/Y"
base::as.POSIXct(mydate, format = SA_date_format)
date_format_yellan <- c(
"YYYY-MM-DD", "YYYY/MM/DD", "YYYY.MM.DD", "YYYYMMDD",
"DD-MM-YYYY", "DD/MM/YYYY", "DD.MM.YYYY", "MM-DD-YYYY"
)
my_date_format <- date_format_yellan[1]
gsub("YYYY","%Y",my_date_format)
date_format_yellan <- gsub("YYYY","%Y",my_date_format)
date_format_yellan <- gsub("MM","%m",date_format_yellan)
date_format_yellan <- gsub("DD","%d",date_format_yellan)
date_format_yellan
date_format_yellan <- gsub("YYYY","%Y",my_date_format)
date_format_yellan <- gsub("MM","%m",date_format_yellan)
date_format_yellan <- gsub("DD","%d",date_format_yellan)
date_format_yellan <- gsub("DD","%d",date_format_yellan)
date_format_yellan <- gsub("Mon","%b",date_format_yellan)
date_format_yellan <- gsub("MONTH","%B",date_format_yellan)
date_format_yellan
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
date_format_yellan
SA_date_format
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
SA_date_format_convert(SA_date_format)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
SA_date_format <- date_format_yellan
SA_date_format_convert(SA_date_format)
SA_date_format
date_format_yellan <- c(
"YYYY-MM-DD", "YYYY/MM/DD", "YYYY.MM.DD", "YYYYMMDD",
"DD-MM-YYYY", "DD/MM/YYYY", "DD.MM.YYYY", "MM-DD-YYYY","YYYY-MON-DD","YYYY/MONTH/DD"
)
SA_date_format_convert(SA_date_format)
SA_date_format_convert(date_format_yellan)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
SA_date_format_convert(SA_date_format)
SA_date_format <- SA_date_format_convert(SA_date_format)
SA_date_format
SA_date_format
SA_date_format <- SA_date_format_convert(SA_date_format)
SA_date_format
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/data_extraction_module.R')
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(readr)
DailyDelhiClimateTest <- read_csv("~/Saldae_Analytics/Tisefka/DailyDelhiClimateTest.csv")
View(DailyDelhiClimateTest)
DailyDelhiClimateTest$date[1]
class(DailyDelhiClimateTest$date[1])
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
time_vect
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
aa <- c(2,3,2,1,1,1,2,1,1)
aa
count(aa)
dplyr::count(aa)
plyr::count(aa)
time_jump <- aa
# .
time_jump <- plyr::count(time_jump)
time_jump
time_jump
time_jump <-aa
# .
time_jump <- plyr::count(time_jump)$x
time_jump
# .
time_jump <- head(plyr::count(time_jump)$x,2)
time_jump
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/time_aggregator_module.R')
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
library(tidyverse)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
anomaly_to_heat_map <- function(anomalies_set = NULL){
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()%>%stats::setNames(names(anomalies_set))%>%
dplyr::bind_cols(my_date)
anomalies_set%>%DT::datatable()
}
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound))
anomalies_set$pce
anomalies_set$pce
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(is.na(Anomalies))))
anomalies_set$pce
View(anomalies_set$pce)
View(anomalies_set$pce)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor))
View(anomalies_set$pce)
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
View(anomalies_set)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%dplyr::select(!!.x))
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor))
View(anomalies_set$pce)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
View(anomalies_set$pce)
anomalies_set<-anomalies_set%>%dplyr::bind_cols()%>%stats::setNames(names(anomalies_set))%>%
dplyr::bind_cols(my_date)
View(anomalies_set$pce)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation)%>%dplyr::rename(paste(.x,c("observed","anomaly","deviation"))))
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation)%>%dplyr::rename(c("observed","anomaly","deviation"),paste0(.x,c("observed","anomaly","deviation"))))
?dplyr::rename
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation)%>%dplyr::rename(c("observed","anomaly","deviation")=paste0(.x,c("observed","anomaly","deviation"))))
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
aa<-anomalies_set$pce
paste0("farid",c("observed","anomaly","deviation"))
aa%>%dplyr::rename(c("observed","anomaly","deviation")=paste0("farid_",c("observed","anomaly","deviation")))
aa%>%dplyr::rename(c("observed","anomaly","deviation"),paste0("farid_",c("observed","anomaly","deviation")))
aa%>%dplyr::rename(paste0("farid_",c("observed","anomaly","deviation")),c("observed","anomaly","deviation"))
aa%>%dplyr::rename_all(paste0("farid_",c("observed","anomaly","deviation")),c("observed","anomaly","deviation"))
?aa%>%dplyr::rename_all
?dplyr::rename_all
aa%>%dplyr::rename_all(paste0("farid_",c("observed","anomaly","deviation")))
aa%>%dplyr::rename(c("observed= farid"))
aa%>%dplyr::rename(c("observed","mamou"))
aa%>%dplyr::rename(c("observed","anomaly"))
aa%>%dplyr::rename(c("observed","anomaly"),c("all","yiwen"))
aa%>%dplyr::rename(c("observed","anomaly"))
new_car_names<-c("a","b","c")
aa%>% rename_all( function(.){new_car_names} )
.x<-"pce"
new_car_names<-c("a","b","c")
.x<-"pce"
aa%>% rename_all( function(.){paste0(.x,c("observed","anomaly","deviation"))} )
.x<-"pce"
aa%>% rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep"_")} )
aa%>% rename_all( function(.){paste(.x,c("observed","anomaly","deviation",sep"_"))} )
aa%>% rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} )
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation)%>%
rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation)%>%
rename_all( function(.){paste(names(.x),c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set <- names(anomalies_set)%>%purrr::map(anomalies_set[[.x]],rename_all( function(.){paste(names(.x),c("observed","anomaly","deviation"),sep="_")} ))
names(anomalies_set)
anomalies_set <- names(anomalies_set)%>%purrr::map(anomalies_set[[.x]],rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set$pce
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()%>%
dplyr::bind_cols(my_date)
anomalies_set%>%DT::datatable()
target_columns <- anomalies_set%>%dplyr::contains("_observed")
target_columns <- anomalies_set%>%dplyr::select(dplyr::contains("_observed"))%>%colnames()
target_columns
value_columns  <- anomalies_set%>%dplyr::select(dplyr::contains("_deviation"))%>%colnames()
value_columns
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
)
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(3.4, c('gray', 'yellow'))
)
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow'))
)
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow')),
options=list(columnDefs = list(list(visible=FALSE, targets=value_columns)))
)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
anomalies_set<- my_date%>%dplyr::bind_cols(anomalies_set)
target_columns <- anomalies_set%>%dplyr::select(dplyr::contains("_observed"))%>%colnames()
value_columns  <- anomalies_set%>%dplyr::select(dplyr::contains("_deviation"))%>%colnames()
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow')),
options=list(columnDefs = list(list(visible=FALSE, targets=value_columns)))
)
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow'))    )
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow')),
options=list(columnDefs = list(list(visible=FALSE, targets=c(3,4,7))))
)
anomalies_set%>%DT::datatable()%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow'))    )
anomalies_set%>%DT::datatable(options=list(columnDefs = list(list(visible=FALSE, targets=c(3,4,7))))
)%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow'))    )
columns2hide   <-grep("_deviation|anomaly",colnames(anomalies_set))
anomalies_set%>%DT::datatable(options=list(columnDefs = list(list(visible=FALSE, targets=columns2hide))))%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(0.4, 1.0), c('white', 'blue', 'red')),
backgroundColor = DT::styleInterval(0.1, c('gray', 'yellow'))    )
anomalies_set%>%DT::datatable(options=list(columnDefs = list(list(visible=FALSE, targets=columns2hide))))%>%
DT::formatStyle(
columns =target_columns ,
valueColumns =value_columns,
color = DT::styleInterval(c(-0.01, 0.01), c('orange', 'black', 'red')),
backgroundColor = DT::styleInterval(c(-0.01, 0.01), c('grey', 'white', 'grey'))    )
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
anomalies_set<- my_date%>%dplyr::bind_cols(anomalies_set)%>%
dplyr::rename_if(dplyr::contains("_obersved"),function(.){gsub("_observed","",.)})
colnames(anomalies_set)<- gsub("_observed","",colnames(anomalies_set))
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
my_date <- anomalies_set[[1]][,"date"]
target_variables <- names(anomalies_set)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
anomalies_set<- my_date%>%dplyr::bind_cols(anomalies_set)
colnames(anomalies_set)<- gsub("_observed","",colnames(anomalies_set))
value_columns  <- anomalies_set%>%dplyr::select(dplyr::contains("_deviation"))%>%colnames()
columns2hide   <-grep("_deviation|anomaly",colnames(anomalies_set))
anomalies_set%>%DT::datatable(options=list(columnDefs = list(list(visible=FALSE, targets=columns2hide))))%>%
DT::formatStyle(
columns =target_variables ,
valueColumns =value_columns,
color = DT::styleInterval(c(-0.01, 0.01), c('orange', 'black', 'red')),
backgroundColor = DT::styleInterval(c(-0.01, 0.01), c('grey', 'white', 'grey'))    )
View(anomalies_set)
View(SaldaeDataExplorer::data_quality_DT)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
library(SaldaeDataExplorer)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
library(tidyverse)
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
#' Anomaly Detection Pool (View)
#' @author  Farid Azouaou
#' @param anomalies_set a list of dataframes containing anomaly detection results
#' @return a DT table
#' @export
anomaly_to_DT_insight <- function(anomalies_set = NULL){
my_date <- anomalies_set[[1]][,"date"]
target_variables <- names(anomalies_set)
anomalies_set <- anomalies_set%>%purrr::map(~dplyr::mutate(.x,corridor = upper_bound - lower_bound,anomaly_bin = as.numeric(!is.na(Anomalies)))%>%
dplyr::mutate(deviation = anomaly_bin *(observed-observed_cleaned)/corridor)%>%
dplyr::select(observed,anomaly,deviation))
anomalies_set <- names(anomalies_set)%>%purrr::map(~anomalies_set[[.x]]%>%rename_all( function(.){paste(.x,c("observed","anomaly","deviation"),sep="_")} ))
anomalies_set<-anomalies_set%>%dplyr::bind_cols()
anomalies_set<- my_date%>%dplyr::bind_cols(anomalies_set)
colnames(anomalies_set)<- gsub("_observed","",colnames(anomalies_set))
value_columns  <- anomalies_set%>%dplyr::select(dplyr::contains("_deviation"))%>%colnames()
columns2hide   <-grep("_deviation|anomaly",colnames(anomalies_set))
anomaly_DT <- anomalies_set%>%DT::datatable(extensions = 'Scroller',options=list(deferRender = TRUE, scrollY = 200, scroller = TRUE,columnDefs = list(list(visible=FALSE, targets=columns2hide))))%>%
DT::formatStyle(
columns =target_variables ,
valueColumns =value_columns,
color = DT::styleInterval(c(-0.01, 0.01), c('white', 'black', 'red')),
backgroundColor = DT::styleInterval(c(-0.01, 0.01), c('orange', 'white', 'brown'))    )
return(anomaly_DT)
}
#
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
aa
source('~/Saldae_Analytics/SaldaePackages/SaldaeDataExplorer/R/anomaly_detection_pool.R')
aa
library(SaldaeDataExplorer)
target_variables <- colnames(economics)[-1]
anomalies_set <-SaldaeDataExplorer::anomaly_detection_nnegh(tisefka = economics,target_ts = target_variables)
aa <- anomaly_to_DT_insight(anomalies_set)
aa
library(SaldaeDataExplorer)
library(SaldaeDataExplorer)
